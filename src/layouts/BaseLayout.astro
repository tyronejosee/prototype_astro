---
export interface Props {
  title: string;
  description?: string;
  image?: string;
  canonicalURL?: string;
}

const {
  title,
  description = "A modern blog built with Astro and TailwindCSS",
  image,
  canonicalURL,
} = Astro.props;
const resolvedImage = image
  ? new URL(image, Astro.site)
  : new URL("/default-og.jpg", Astro.site);
---

<!doctype html>
<html lang="en" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />

    <title>{title}</title>
    <meta name="description" content={description} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonicalURL || Astro.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={resolvedImage} />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL || Astro.url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={resolvedImage} />

    {canonicalURL && <link rel="canonical" href={canonicalURL} />}

    <script is:inline>
      // Dark mode initialization
      if (
        localStorage.getItem("theme") === "dark" ||
        (!localStorage.getItem("theme") &&
          window.matchMedia("(prefers-color-scheme: dark)").matches)
      ) {
        document.documentElement.classList.add("dark");
      } else {
        document.documentElement.classList.remove("dark");
      }
    </script>
  </head>
  <body
    class="bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100 transition-colors duration-200"
  >
    <slot />

    <script>
      // Dark mode toggle functionality
      const toggleButton = document.getElementById("theme-toggle");
      const html = document.documentElement;

      toggleButton?.addEventListener("click", () => {
        const isDark = html.classList.contains("dark");
        if (isDark) {
          html.classList.remove("dark");
          localStorage.setItem("theme", "light");
        } else {
          html.classList.add("dark");
          localStorage.setItem("theme", "dark");
        }
      });
    </script>
  </body>
</html>
